buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'maven-publish'
apply plugin: 'maven'

version = project.property('mod.version') + "-" + project.property('minecraft.version')
group = 'com.tyrellplayz'
archivesBaseName = 'zlib'

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: project.property('mappings.channel'), version: project.property('mappings.version')
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories { mavenLocal() }

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.1.4'
}

jar {
    manifest {
        attributes([
                "Specification-Title"   : project.property('mod.name'),
                "Specification-Vendor"  : project.property('mod.author'),
                "Specification-Version" : "1",
                "Implementation-Title"  : project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" : project.property('mod.author'),
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

task deobfJar(type: Jar) {
    classifier = 'deobf'
    from sourceSets.main.output
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
    from sourceSets.main.output
}

artifacts {
    archives jar
    archives sourcesJar
    archives deobfJar
}

publishing {
    repositories {
        mavenLocal()
    }
    publications {
        mavenJava(MavenPublication) {
             artifactId = project.archivesBaseName
            from components.java
        }
    }
}

//install {
//    repositories.mavenInstaller {
//        pom.groupId = project.group
//        pom.version = project.version
//        pom.artifactId = project.archivesBaseName
//    }
//}